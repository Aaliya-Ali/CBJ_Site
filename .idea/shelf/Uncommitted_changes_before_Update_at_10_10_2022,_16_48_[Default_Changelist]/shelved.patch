Index: lib/presentation/new_home_page/widgets/tab_indicator.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/presentation/new_home_page/widgets/tab_indicator.dart b/lib/presentation/new_home_page/widgets/tab_indicator.dart
new file mode 100644
--- /dev/null	(date 1665409405196)
+++ b/lib/presentation/new_home_page/widgets/tab_indicator.dart	(date 1665409405196)
@@ -0,0 +1,53 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+
+class TabIndicator extends StatelessWidget {
+  TabIndicator(this.numberOfTabs, this.currentTab);
+
+  int numberOfTabs;
+  int currentTab;
+
+  @override
+  Widget build(BuildContext context) {
+    const double circleSize = 20;
+    const double margin = 6;
+    return SizedBox(
+      width: 50,
+      height: circleSize * numberOfTabs + circleSize * 2,
+      child: ListView.builder(
+        physics: const NeverScrollableScrollPhysics(),
+        itemBuilder: (BuildContext context, int index) {
+          double size = 4;
+          if (index == currentTab) {
+            size += 8;
+          }
+          return Container(
+            margin: const EdgeInsets.all(margin),
+            child: CirclePainterUnTicked(size),
+          );
+        },
+        itemCount: numberOfTabs,
+      ),
+    );
+  }
+}
+
+class CirclePainterUnTicked extends StatelessWidget {
+  CirclePainterUnTicked(this.size);
+
+  final double size;
+
+  @override
+  Widget build(BuildContext context) {
+    return Center(
+      child: Container(
+        width: size,
+        height: size,
+        decoration: const BoxDecoration(
+          color: Colors.white,
+          shape: BoxShape.circle,
+        ),
+      ),
+    );
+  }
+}
Index: lib/application/new_home_page/new_home_page_bloc.freezed.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/application/new_home_page/new_home_page_bloc.freezed.dart b/lib/application/new_home_page/new_home_page_bloc.freezed.dart
new file mode 100644
--- /dev/null	(date 1665403422701)
+++ b/lib/application/new_home_page/new_home_page_bloc.freezed.dart	(date 1665403422701)
@@ -0,0 +1,946 @@
+// coverage:ignore-file
+// GENERATED CODE - DO NOT MODIFY BY HAND
+// ignore_for_file: type=lint
+// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target
+
+part of 'new_home_page_bloc.dart';
+
+// **************************************************************************
+// FreezedGenerator
+// **************************************************************************
+
+T _$identity<T>(T value) => value;
+
+final _privateConstructorUsedError = UnsupportedError(
+    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');
+
+/// @nodoc
+mixin _$NewHomePageEvent {
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>({
+    required TResult Function() initialized,
+    required TResult Function(double scrollPosition, int currentPage)
+        scrollPage,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>({
+    TResult Function()? initialized,
+    TResult Function(double scrollPosition, int currentPage)? scrollPage,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>({
+    TResult Function()? initialized,
+    TResult Function(double scrollPosition, int currentPage)? scrollPage,
+    required TResult orElse(),
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>({
+    required TResult Function(Initialized value) initialized,
+    required TResult Function(ScrollPage value) scrollPage,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>({
+    TResult Function(Initialized value)? initialized,
+    TResult Function(ScrollPage value)? scrollPage,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>({
+    TResult Function(Initialized value)? initialized,
+    TResult Function(ScrollPage value)? scrollPage,
+    required TResult orElse(),
+  }) =>
+      throw _privateConstructorUsedError;
+}
+
+/// @nodoc
+abstract class $NewHomePageEventCopyWith<$Res> {
+  factory $NewHomePageEventCopyWith(
+          NewHomePageEvent value, $Res Function(NewHomePageEvent) then) =
+      _$NewHomePageEventCopyWithImpl<$Res>;
+}
+
+/// @nodoc
+class _$NewHomePageEventCopyWithImpl<$Res>
+    implements $NewHomePageEventCopyWith<$Res> {
+  _$NewHomePageEventCopyWithImpl(this._value, this._then);
+
+  final NewHomePageEvent _value;
+  // ignore: unused_field
+  final $Res Function(NewHomePageEvent) _then;
+}
+
+/// @nodoc
+abstract class _$$InitializedCopyWith<$Res> {
+  factory _$$InitializedCopyWith(
+          _$Initialized value, $Res Function(_$Initialized) then) =
+      __$$InitializedCopyWithImpl<$Res>;
+}
+
+/// @nodoc
+class __$$InitializedCopyWithImpl<$Res>
+    extends _$NewHomePageEventCopyWithImpl<$Res>
+    implements _$$InitializedCopyWith<$Res> {
+  __$$InitializedCopyWithImpl(
+      _$Initialized _value, $Res Function(_$Initialized) _then)
+      : super(_value, (v) => _then(v as _$Initialized));
+
+  @override
+  _$Initialized get _value => super._value as _$Initialized;
+}
+
+/// @nodoc
+
+class _$Initialized implements Initialized {
+  const _$Initialized();
+
+  @override
+  String toString() {
+    return 'NewHomePageEvent.initialized()';
+  }
+
+  @override
+  bool operator ==(dynamic other) {
+    return identical(this, other) ||
+        (other.runtimeType == runtimeType && other is _$Initialized);
+  }
+
+  @override
+  int get hashCode => runtimeType.hashCode;
+
+  @override
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>({
+    required TResult Function() initialized,
+    required TResult Function(double scrollPosition, int currentPage)
+        scrollPage,
+  }) {
+    return initialized();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>({
+    TResult Function()? initialized,
+    TResult Function(double scrollPosition, int currentPage)? scrollPage,
+  }) {
+    return initialized?.call();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>({
+    TResult Function()? initialized,
+    TResult Function(double scrollPosition, int currentPage)? scrollPage,
+    required TResult orElse(),
+  }) {
+    if (initialized != null) {
+      return initialized();
+    }
+    return orElse();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>({
+    required TResult Function(Initialized value) initialized,
+    required TResult Function(ScrollPage value) scrollPage,
+  }) {
+    return initialized(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>({
+    TResult Function(Initialized value)? initialized,
+    TResult Function(ScrollPage value)? scrollPage,
+  }) {
+    return initialized?.call(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>({
+    TResult Function(Initialized value)? initialized,
+    TResult Function(ScrollPage value)? scrollPage,
+    required TResult orElse(),
+  }) {
+    if (initialized != null) {
+      return initialized(this);
+    }
+    return orElse();
+  }
+}
+
+abstract class Initialized implements NewHomePageEvent {
+  const factory Initialized() = _$Initialized;
+}
+
+/// @nodoc
+abstract class _$$ScrollPageCopyWith<$Res> {
+  factory _$$ScrollPageCopyWith(
+          _$ScrollPage value, $Res Function(_$ScrollPage) then) =
+      __$$ScrollPageCopyWithImpl<$Res>;
+  $Res call({double scrollPosition, int currentPage});
+}
+
+/// @nodoc
+class __$$ScrollPageCopyWithImpl<$Res>
+    extends _$NewHomePageEventCopyWithImpl<$Res>
+    implements _$$ScrollPageCopyWith<$Res> {
+  __$$ScrollPageCopyWithImpl(
+      _$ScrollPage _value, $Res Function(_$ScrollPage) _then)
+      : super(_value, (v) => _then(v as _$ScrollPage));
+
+  @override
+  _$ScrollPage get _value => super._value as _$ScrollPage;
+
+  @override
+  $Res call({
+    Object? scrollPosition = freezed,
+    Object? currentPage = freezed,
+  }) {
+    return _then(_$ScrollPage(
+      scrollPosition == freezed
+          ? _value.scrollPosition
+          : scrollPosition // ignore: cast_nullable_to_non_nullable
+              as double,
+      currentPage == freezed
+          ? _value.currentPage
+          : currentPage // ignore: cast_nullable_to_non_nullable
+              as int,
+    ));
+  }
+}
+
+/// @nodoc
+
+class _$ScrollPage implements ScrollPage {
+  const _$ScrollPage(this.scrollPosition, this.currentPage);
+
+  @override
+  final double scrollPosition;
+  @override
+  final int currentPage;
+
+  @override
+  String toString() {
+    return 'NewHomePageEvent.scrollPage(scrollPosition: $scrollPosition, currentPage: $currentPage)';
+  }
+
+  @override
+  bool operator ==(dynamic other) {
+    return identical(this, other) ||
+        (other.runtimeType == runtimeType &&
+            other is _$ScrollPage &&
+            const DeepCollectionEquality()
+                .equals(other.scrollPosition, scrollPosition) &&
+            const DeepCollectionEquality()
+                .equals(other.currentPage, currentPage));
+  }
+
+  @override
+  int get hashCode => Object.hash(
+      runtimeType,
+      const DeepCollectionEquality().hash(scrollPosition),
+      const DeepCollectionEquality().hash(currentPage));
+
+  @JsonKey(ignore: true)
+  @override
+  _$$ScrollPageCopyWith<_$ScrollPage> get copyWith =>
+      __$$ScrollPageCopyWithImpl<_$ScrollPage>(this, _$identity);
+
+  @override
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>({
+    required TResult Function() initialized,
+    required TResult Function(double scrollPosition, int currentPage)
+        scrollPage,
+  }) {
+    return scrollPage(scrollPosition, currentPage);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>({
+    TResult Function()? initialized,
+    TResult Function(double scrollPosition, int currentPage)? scrollPage,
+  }) {
+    return scrollPage?.call(scrollPosition, currentPage);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>({
+    TResult Function()? initialized,
+    TResult Function(double scrollPosition, int currentPage)? scrollPage,
+    required TResult orElse(),
+  }) {
+    if (scrollPage != null) {
+      return scrollPage(scrollPosition, currentPage);
+    }
+    return orElse();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>({
+    required TResult Function(Initialized value) initialized,
+    required TResult Function(ScrollPage value) scrollPage,
+  }) {
+    return scrollPage(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>({
+    TResult Function(Initialized value)? initialized,
+    TResult Function(ScrollPage value)? scrollPage,
+  }) {
+    return scrollPage?.call(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>({
+    TResult Function(Initialized value)? initialized,
+    TResult Function(ScrollPage value)? scrollPage,
+    required TResult orElse(),
+  }) {
+    if (scrollPage != null) {
+      return scrollPage(this);
+    }
+    return orElse();
+  }
+}
+
+abstract class ScrollPage implements NewHomePageEvent {
+  const factory ScrollPage(final double scrollPosition, final int currentPage) =
+      _$ScrollPage;
+
+  double get scrollPosition;
+  int get currentPage;
+  @JsonKey(ignore: true)
+  _$$ScrollPageCopyWith<_$ScrollPage> get copyWith =>
+      throw _privateConstructorUsedError;
+}
+
+/// @nodoc
+mixin _$NewHomePageState {
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>(
+    TResult Function() $default, {
+    required TResult Function(double scrollPosition, int currentPage) loading,
+    required TResult Function(double scrollPosition, int currentPage) loaded,
+    required TResult Function() error,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+    required TResult orElse(),
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>(
+    TResult Function(_NewHomePageState value) $default, {
+    required TResult Function(Loading value) loading,
+    required TResult Function(Loaded value) loaded,
+    required TResult Function(Error value) error,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+  }) =>
+      throw _privateConstructorUsedError;
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+    required TResult orElse(),
+  }) =>
+      throw _privateConstructorUsedError;
+}
+
+/// @nodoc
+abstract class $NewHomePageStateCopyWith<$Res> {
+  factory $NewHomePageStateCopyWith(
+          NewHomePageState value, $Res Function(NewHomePageState) then) =
+      _$NewHomePageStateCopyWithImpl<$Res>;
+}
+
+/// @nodoc
+class _$NewHomePageStateCopyWithImpl<$Res>
+    implements $NewHomePageStateCopyWith<$Res> {
+  _$NewHomePageStateCopyWithImpl(this._value, this._then);
+
+  final NewHomePageState _value;
+  // ignore: unused_field
+  final $Res Function(NewHomePageState) _then;
+}
+
+/// @nodoc
+abstract class _$$_NewHomePageStateCopyWith<$Res> {
+  factory _$$_NewHomePageStateCopyWith(
+          _$_NewHomePageState value, $Res Function(_$_NewHomePageState) then) =
+      __$$_NewHomePageStateCopyWithImpl<$Res>;
+}
+
+/// @nodoc
+class __$$_NewHomePageStateCopyWithImpl<$Res>
+    extends _$NewHomePageStateCopyWithImpl<$Res>
+    implements _$$_NewHomePageStateCopyWith<$Res> {
+  __$$_NewHomePageStateCopyWithImpl(
+      _$_NewHomePageState _value, $Res Function(_$_NewHomePageState) _then)
+      : super(_value, (v) => _then(v as _$_NewHomePageState));
+
+  @override
+  _$_NewHomePageState get _value => super._value as _$_NewHomePageState;
+}
+
+/// @nodoc
+
+class _$_NewHomePageState implements _NewHomePageState {
+  const _$_NewHomePageState();
+
+  @override
+  String toString() {
+    return 'NewHomePageState()';
+  }
+
+  @override
+  bool operator ==(dynamic other) {
+    return identical(this, other) ||
+        (other.runtimeType == runtimeType && other is _$_NewHomePageState);
+  }
+
+  @override
+  int get hashCode => runtimeType.hashCode;
+
+  @override
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>(
+    TResult Function() $default, {
+    required TResult Function(double scrollPosition, int currentPage) loading,
+    required TResult Function(double scrollPosition, int currentPage) loaded,
+    required TResult Function() error,
+  }) {
+    return $default();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+  }) {
+    return $default?.call();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+    required TResult orElse(),
+  }) {
+    if ($default != null) {
+      return $default();
+    }
+    return orElse();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>(
+    TResult Function(_NewHomePageState value) $default, {
+    required TResult Function(Loading value) loading,
+    required TResult Function(Loaded value) loaded,
+    required TResult Function(Error value) error,
+  }) {
+    return $default(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+  }) {
+    return $default?.call(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+    required TResult orElse(),
+  }) {
+    if ($default != null) {
+      return $default(this);
+    }
+    return orElse();
+  }
+}
+
+abstract class _NewHomePageState implements NewHomePageState {
+  const factory _NewHomePageState() = _$_NewHomePageState;
+}
+
+/// @nodoc
+abstract class _$$LoadingCopyWith<$Res> {
+  factory _$$LoadingCopyWith(_$Loading value, $Res Function(_$Loading) then) =
+      __$$LoadingCopyWithImpl<$Res>;
+  $Res call({double scrollPosition, int currentPage});
+}
+
+/// @nodoc
+class __$$LoadingCopyWithImpl<$Res> extends _$NewHomePageStateCopyWithImpl<$Res>
+    implements _$$LoadingCopyWith<$Res> {
+  __$$LoadingCopyWithImpl(_$Loading _value, $Res Function(_$Loading) _then)
+      : super(_value, (v) => _then(v as _$Loading));
+
+  @override
+  _$Loading get _value => super._value as _$Loading;
+
+  @override
+  $Res call({
+    Object? scrollPosition = freezed,
+    Object? currentPage = freezed,
+  }) {
+    return _then(_$Loading(
+      scrollPosition == freezed
+          ? _value.scrollPosition
+          : scrollPosition // ignore: cast_nullable_to_non_nullable
+              as double,
+      currentPage == freezed
+          ? _value.currentPage
+          : currentPage // ignore: cast_nullable_to_non_nullable
+              as int,
+    ));
+  }
+}
+
+/// @nodoc
+
+class _$Loading implements Loading {
+  const _$Loading(this.scrollPosition, this.currentPage);
+
+  @override
+  final double scrollPosition;
+  @override
+  final int currentPage;
+
+  @override
+  String toString() {
+    return 'NewHomePageState.loading(scrollPosition: $scrollPosition, currentPage: $currentPage)';
+  }
+
+  @override
+  bool operator ==(dynamic other) {
+    return identical(this, other) ||
+        (other.runtimeType == runtimeType &&
+            other is _$Loading &&
+            const DeepCollectionEquality()
+                .equals(other.scrollPosition, scrollPosition) &&
+            const DeepCollectionEquality()
+                .equals(other.currentPage, currentPage));
+  }
+
+  @override
+  int get hashCode => Object.hash(
+      runtimeType,
+      const DeepCollectionEquality().hash(scrollPosition),
+      const DeepCollectionEquality().hash(currentPage));
+
+  @JsonKey(ignore: true)
+  @override
+  _$$LoadingCopyWith<_$Loading> get copyWith =>
+      __$$LoadingCopyWithImpl<_$Loading>(this, _$identity);
+
+  @override
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>(
+    TResult Function() $default, {
+    required TResult Function(double scrollPosition, int currentPage) loading,
+    required TResult Function(double scrollPosition, int currentPage) loaded,
+    required TResult Function() error,
+  }) {
+    return loading(scrollPosition, currentPage);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+  }) {
+    return loading?.call(scrollPosition, currentPage);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+    required TResult orElse(),
+  }) {
+    if (loading != null) {
+      return loading(scrollPosition, currentPage);
+    }
+    return orElse();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>(
+    TResult Function(_NewHomePageState value) $default, {
+    required TResult Function(Loading value) loading,
+    required TResult Function(Loaded value) loaded,
+    required TResult Function(Error value) error,
+  }) {
+    return loading(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+  }) {
+    return loading?.call(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+    required TResult orElse(),
+  }) {
+    if (loading != null) {
+      return loading(this);
+    }
+    return orElse();
+  }
+}
+
+abstract class Loading implements NewHomePageState {
+  const factory Loading(final double scrollPosition, final int currentPage) =
+      _$Loading;
+
+  double get scrollPosition;
+  int get currentPage;
+  @JsonKey(ignore: true)
+  _$$LoadingCopyWith<_$Loading> get copyWith =>
+      throw _privateConstructorUsedError;
+}
+
+/// @nodoc
+abstract class _$$LoadedCopyWith<$Res> {
+  factory _$$LoadedCopyWith(_$Loaded value, $Res Function(_$Loaded) then) =
+      __$$LoadedCopyWithImpl<$Res>;
+  $Res call({double scrollPosition, int currentPage});
+}
+
+/// @nodoc
+class __$$LoadedCopyWithImpl<$Res> extends _$NewHomePageStateCopyWithImpl<$Res>
+    implements _$$LoadedCopyWith<$Res> {
+  __$$LoadedCopyWithImpl(_$Loaded _value, $Res Function(_$Loaded) _then)
+      : super(_value, (v) => _then(v as _$Loaded));
+
+  @override
+  _$Loaded get _value => super._value as _$Loaded;
+
+  @override
+  $Res call({
+    Object? scrollPosition = freezed,
+    Object? currentPage = freezed,
+  }) {
+    return _then(_$Loaded(
+      scrollPosition == freezed
+          ? _value.scrollPosition
+          : scrollPosition // ignore: cast_nullable_to_non_nullable
+              as double,
+      currentPage == freezed
+          ? _value.currentPage
+          : currentPage // ignore: cast_nullable_to_non_nullable
+              as int,
+    ));
+  }
+}
+
+/// @nodoc
+
+class _$Loaded implements Loaded {
+  const _$Loaded(this.scrollPosition, this.currentPage);
+
+  @override
+  final double scrollPosition;
+  @override
+  final int currentPage;
+
+  @override
+  String toString() {
+    return 'NewHomePageState.loaded(scrollPosition: $scrollPosition, currentPage: $currentPage)';
+  }
+
+  @override
+  bool operator ==(dynamic other) {
+    return identical(this, other) ||
+        (other.runtimeType == runtimeType &&
+            other is _$Loaded &&
+            const DeepCollectionEquality()
+                .equals(other.scrollPosition, scrollPosition) &&
+            const DeepCollectionEquality()
+                .equals(other.currentPage, currentPage));
+  }
+
+  @override
+  int get hashCode => Object.hash(
+      runtimeType,
+      const DeepCollectionEquality().hash(scrollPosition),
+      const DeepCollectionEquality().hash(currentPage));
+
+  @JsonKey(ignore: true)
+  @override
+  _$$LoadedCopyWith<_$Loaded> get copyWith =>
+      __$$LoadedCopyWithImpl<_$Loaded>(this, _$identity);
+
+  @override
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>(
+    TResult Function() $default, {
+    required TResult Function(double scrollPosition, int currentPage) loading,
+    required TResult Function(double scrollPosition, int currentPage) loaded,
+    required TResult Function() error,
+  }) {
+    return loaded(scrollPosition, currentPage);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+  }) {
+    return loaded?.call(scrollPosition, currentPage);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+    required TResult orElse(),
+  }) {
+    if (loaded != null) {
+      return loaded(scrollPosition, currentPage);
+    }
+    return orElse();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>(
+    TResult Function(_NewHomePageState value) $default, {
+    required TResult Function(Loading value) loading,
+    required TResult Function(Loaded value) loaded,
+    required TResult Function(Error value) error,
+  }) {
+    return loaded(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+  }) {
+    return loaded?.call(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+    required TResult orElse(),
+  }) {
+    if (loaded != null) {
+      return loaded(this);
+    }
+    return orElse();
+  }
+}
+
+abstract class Loaded implements NewHomePageState {
+  const factory Loaded(final double scrollPosition, final int currentPage) =
+      _$Loaded;
+
+  double get scrollPosition;
+  int get currentPage;
+  @JsonKey(ignore: true)
+  _$$LoadedCopyWith<_$Loaded> get copyWith =>
+      throw _privateConstructorUsedError;
+}
+
+/// @nodoc
+abstract class _$$ErrorCopyWith<$Res> {
+  factory _$$ErrorCopyWith(_$Error value, $Res Function(_$Error) then) =
+      __$$ErrorCopyWithImpl<$Res>;
+}
+
+/// @nodoc
+class __$$ErrorCopyWithImpl<$Res> extends _$NewHomePageStateCopyWithImpl<$Res>
+    implements _$$ErrorCopyWith<$Res> {
+  __$$ErrorCopyWithImpl(_$Error _value, $Res Function(_$Error) _then)
+      : super(_value, (v) => _then(v as _$Error));
+
+  @override
+  _$Error get _value => super._value as _$Error;
+}
+
+/// @nodoc
+
+class _$Error implements Error {
+  const _$Error();
+
+  @override
+  String toString() {
+    return 'NewHomePageState.error()';
+  }
+
+  @override
+  bool operator ==(dynamic other) {
+    return identical(this, other) ||
+        (other.runtimeType == runtimeType && other is _$Error);
+  }
+
+  @override
+  int get hashCode => runtimeType.hashCode;
+
+  @override
+  @optionalTypeArgs
+  TResult when<TResult extends Object?>(
+    TResult Function() $default, {
+    required TResult Function(double scrollPosition, int currentPage) loading,
+    required TResult Function(double scrollPosition, int currentPage) loaded,
+    required TResult Function() error,
+  }) {
+    return error();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? whenOrNull<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+  }) {
+    return error?.call();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeWhen<TResult extends Object?>(
+    TResult Function()? $default, {
+    TResult Function(double scrollPosition, int currentPage)? loading,
+    TResult Function(double scrollPosition, int currentPage)? loaded,
+    TResult Function()? error,
+    required TResult orElse(),
+  }) {
+    if (error != null) {
+      return error();
+    }
+    return orElse();
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult map<TResult extends Object?>(
+    TResult Function(_NewHomePageState value) $default, {
+    required TResult Function(Loading value) loading,
+    required TResult Function(Loaded value) loaded,
+    required TResult Function(Error value) error,
+  }) {
+    return error(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult? mapOrNull<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+  }) {
+    return error?.call(this);
+  }
+
+  @override
+  @optionalTypeArgs
+  TResult maybeMap<TResult extends Object?>(
+    TResult Function(_NewHomePageState value)? $default, {
+    TResult Function(Loading value)? loading,
+    TResult Function(Loaded value)? loaded,
+    TResult Function(Error value)? error,
+    required TResult orElse(),
+  }) {
+    if (error != null) {
+      return error(this);
+    }
+    return orElse();
+  }
+}
+
+abstract class Error implements NewHomePageState {
+  const factory Error() = _$Error;
+}
Index: pubspec.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: cybear_jinni_site\ndescription: Site for CyBear Jinni Smart Home\nversion: 1.0.0+3\n\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\n\nenvironment:\n  sdk: ^2.17.1\n\n\nflutter:\n  # Ensures that the Material Icons font is included with your application.\n  uses-material-design: true\n\n  assets:\n    - assets/\n    - assets/fan_art/\n    - assets/fan_art/after_editing/\n    - assets/translations/\n    - assets/images/\n\n  fonts:\n    - family: gidole_regular\n      fonts:\n        - asset: assets/gidole_regular.ttf\n\ndependencies:\n  # Automatically resizes text to fit perfectly within its bounds\n  auto_size_text: ^3.0.0\n  # Show images from the internet and keep them in the cache directory.\n  cached_network_image: ^3.2.2\n  # Spotlight Bottom Navigation Bar\n  cool_nav: ^0.1.0\n  # The following adds the Cupertino Icons font to your application.\n  # Use with the CupertinoIcons class for iOS style icons.\n  cupertino_icons: ^1.0.5\n  # Internationalization (Easy translations)\n  easy_localization: ^3.0.1\n  # Widget that can be expanded or collapsed by the user.\n  expandable: ^5.0.1\n  flutter:\n    sdk: flutter\n  # Bloc for state management, replace StatefulWidget\n  flutter_bloc: ^8.1.1\n  # staggered grid view which supports multiple columns with rows of varying sizes.\n  flutter_staggered_grid_view: ^0.6.2\n  # The Font Awesome Icon pack available as set of Flutter Icons. https://fontawesome.com/\n  font_awesome_flutter: ^10.2.1\n  # Add hex color codes to your flutter projects\n  hexcolor: ^2.0.7\n  # Links to your text.\n  linkable: ^3.0.1\n  # Popup that ask for the requested permission\n  permission_handler: ^10.0.2\n  # Allows you to create a readable responsive UI\n  responsive_builder: ^0.4.3\n  # Launching a URL in the mobile platform\n  url_launcher: ^6.1.6\n  # YouTube iFrame player\n  youtube_player_iframe: ^2.3.0\n\ndev_dependencies:\n  # A build system for Dart code generation and modular compilation.\n  build_runner:\n\n  flutter_test:\n    sdk: flutter\n  # Collection of lint rules for Dart and Flutter projects.\n  lint: ^1.10.0\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.yaml b/pubspec.yaml
--- a/pubspec.yaml	(revision dd4ebff7b31b3de61eafb2b955c77cd9b1043ff7)
+++ b/pubspec.yaml	(date 1665398777659)
@@ -27,6 +27,8 @@
 dependencies:
   # Automatically resizes text to fit perfectly within its bounds
   auto_size_text: ^3.0.0
+  # Helps implement the BLoC pattern.
+  bloc: ^8.1.0
   # Show images from the internet and keep them in the cache directory.
   cached_network_image: ^3.2.2
   # Spotlight Bottom Navigation Bar
@@ -46,10 +48,18 @@
   flutter_staggered_grid_view: ^0.6.2
   # The Font Awesome Icon pack available as set of Flutter Icons. https://fontawesome.com/
   font_awesome_flutter: ^10.2.1
+  # Annotations for freezed
+  freezed_annotation: ^2.1.0
+  # Service locator
+  get_it: ^7.2.0
   # Add hex color codes to your flutter projects
   hexcolor: ^2.0.7
+  # Convenient code generator for get_it
+  injectable: ^1.5.3
   # Links to your text.
   linkable: ^3.0.1
+  # Small, easy to use and extensible logger which prints beautiful logs.
+  logger: ^1.1.0
   # Popup that ask for the requested permission
   permission_handler: ^10.0.2
   # Allows you to create a readable responsive UI
@@ -65,5 +75,10 @@
 
   flutter_test:
     sdk: flutter
+  # Code generator for unions/pattern-matching/copy.
+  freezed: ^2.1.0+1
+  # Convenient code generator for get_it.
+  injectable_generator: ^1.5.4
   # Collection of lint rules for Dart and Flutter projects.
   lint: ^1.10.0
+
Index: pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  _fe_analyzer_shared:\n    dependency: transitive\n    description:\n      name: _fe_analyzer_shared\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"46.0.0\"\n  analyzer:\n    dependency: transitive\n    description:\n      name: analyzer\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.6.0\"\n  args:\n    dependency: transitive\n    description:\n      name: args\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.1\"\n  async:\n    dependency: transitive\n    description:\n      name: async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.9.0\"\n  auto_size_text:\n    dependency: \"direct main\"\n    description:\n      name: auto_size_text\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.0\"\n  bloc:\n    dependency: transitive\n    description:\n      name: bloc\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"8.1.0\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  build:\n    dependency: transitive\n    description:\n      name: build\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.0\"\n  build_config:\n    dependency: transitive\n    description:\n      name: build_config\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0\"\n  build_daemon:\n    dependency: transitive\n    description:\n      name: build_daemon\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.1.0\"\n  build_resolvers:\n    dependency: transitive\n    description:\n      name: build_resolvers\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.9\"\n  build_runner:\n    dependency: \"direct dev\"\n    description:\n      name: build_runner\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.2.0\"\n  build_runner_core:\n    dependency: transitive\n    description:\n      name: build_runner_core\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"7.2.3\"\n  built_collection:\n    dependency: transitive\n    description:\n      name: built_collection\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"5.1.1\"\n  built_value:\n    dependency: transitive\n    description:\n      name: built_value\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"8.4.1\"\n  cached_network_image:\n    dependency: \"direct main\"\n    description:\n      name: cached_network_image\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.2.2\"\n  cached_network_image_platform_interface:\n    dependency: transitive\n    description:\n      name: cached_network_image_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.0\"\n  cached_network_image_web:\n    dependency: transitive\n    description:\n      name: cached_network_image_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.2\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.1\"\n  checked_yaml:\n    dependency: transitive\n    description:\n      name: checked_yaml\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.1\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.1\"\n  code_builder:\n    dependency: transitive\n    description:\n      name: code_builder\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.2.0\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.16.0\"\n  convert:\n    dependency: transitive\n    description:\n      name: convert\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.2\"\n  cool_nav:\n    dependency: \"direct main\"\n    description:\n      name: cool_nav\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.1.0\"\n  crypto:\n    dependency: transitive\n    description:\n      name: crypto\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.2\"\n  cupertino_icons:\n    dependency: \"direct main\"\n    description:\n      name: cupertino_icons\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.5\"\n  dart_style:\n    dependency: transitive\n    description:\n      name: dart_style\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.2.3\"\n  easy_localization:\n    dependency: \"direct main\"\n    description:\n      name: easy_localization\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1\"\n  easy_logger:\n    dependency: transitive\n    description:\n      name: easy_logger\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.0.2\"\n  expandable:\n    dependency: \"direct main\"\n    description:\n      name: expandable\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"5.0.1\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.1\"\n  ffi:\n    dependency: transitive\n    description:\n      name: ffi\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.1\"\n  file:\n    dependency: transitive\n    description:\n      name: file\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.1.4\"\n  fixnum:\n    dependency: transitive\n    description:\n      name: fixnum\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.1\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_bloc:\n    dependency: \"direct main\"\n    description:\n      name: flutter_bloc\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"8.1.1\"\n  flutter_blurhash:\n    dependency: transitive\n    description:\n      name: flutter_blurhash\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.7.0\"\n  flutter_cache_manager:\n    dependency: transitive\n    description:\n      name: flutter_cache_manager\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.3.0\"\n  flutter_inappwebview:\n    dependency: transitive\n    description:\n      name: flutter_inappwebview\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"5.4.3+7\"\n  flutter_localizations:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_staggered_grid_view:\n    dependency: \"direct main\"\n    description:\n      name: flutter_staggered_grid_view\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.6.2\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_web_plugins:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  font_awesome_flutter:\n    dependency: \"direct main\"\n    description:\n      name: font_awesome_flutter\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"10.2.1\"\n  frontend_server_client:\n    dependency: transitive\n    description:\n      name: frontend_server_client\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.3\"\n  glob:\n    dependency: transitive\n    description:\n      name: glob\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  graphs:\n    dependency: transitive\n    description:\n      name: graphs\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  hexcolor:\n    dependency: \"direct main\"\n    description:\n      name: hexcolor\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.7\"\n  http:\n    dependency: transitive\n    description:\n      name: http\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.13.5\"\n  http_multi_server:\n    dependency: transitive\n    description:\n      name: http_multi_server\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.2.1\"\n  http_parser:\n    dependency: transitive\n    description:\n      name: http_parser\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.0.1\"\n  intl:\n    dependency: transitive\n    description:\n      name: intl\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.17.0\"\n  io:\n    dependency: transitive\n    description:\n      name: io\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.3\"\n  js:\n    dependency: transitive\n    description:\n      name: js\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.6.4\"\n  json_annotation:\n    dependency: transitive\n    description:\n      name: json_annotation\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.6.0\"\n  linkable:\n    dependency: \"direct main\"\n    description:\n      name: linkable\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1\"\n  lint:\n    dependency: \"direct dev\"\n    description:\n      name: lint\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.10.0\"\n  logging:\n    dependency: transitive\n    description:\n      name: logging\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.2\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.12.12\"\n  material_color_utilities:\n    dependency: transitive\n    description:\n      name: material_color_utilities\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.1.5\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0\"\n  mime:\n    dependency: transitive\n    description:\n      name: mime\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.2\"\n  nested:\n    dependency: transitive\n    description:\n      name: nested\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.0\"\n  octo_image:\n    dependency: transitive\n    description:\n      name: octo_image\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.2\"\n  package_config:\n    dependency: transitive\n    description:\n      name: package_config\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  path:\n    dependency: transitive\n    description:\n      name: path\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.2\"\n  path_provider:\n    dependency: transitive\n    description:\n      name: path_provider\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.11\"\n  path_provider_android:\n    dependency: transitive\n    description:\n      name: path_provider_android\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.19\"\n  path_provider_ios:\n    dependency: transitive\n    description:\n      name: path_provider_ios\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.11\"\n  path_provider_linux:\n    dependency: transitive\n    description:\n      name: path_provider_linux\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.7\"\n  path_provider_macos:\n    dependency: transitive\n    description:\n      name: path_provider_macos\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.6\"\n  path_provider_platform_interface:\n    dependency: transitive\n    description:\n      name: path_provider_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.4\"\n  path_provider_windows:\n    dependency: transitive\n    description:\n      name: path_provider_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.2\"\n  pedantic:\n    dependency: transitive\n    description:\n      name: pedantic\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.11.1\"\n  permission_handler:\n    dependency: \"direct main\"\n    description:\n      name: permission_handler\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"10.1.0\"\n  permission_handler_android:\n    dependency: transitive\n    description:\n      name: permission_handler_android\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"10.1.0\"\n  permission_handler_apple:\n    dependency: transitive\n    description:\n      name: permission_handler_apple\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"9.0.6\"\n  permission_handler_platform_interface:\n    dependency: transitive\n    description:\n      name: permission_handler_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.9.0\"\n  permission_handler_windows:\n    dependency: transitive\n    description:\n      name: permission_handler_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.1.1\"\n  platform:\n    dependency: transitive\n    description:\n      name: platform\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.1.0\"\n  plugin_platform_interface:\n    dependency: transitive\n    description:\n      name: plugin_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.2\"\n  pool:\n    dependency: transitive\n    description:\n      name: pool\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.5.1\"\n  process:\n    dependency: transitive\n    description:\n      name: process\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"4.2.4\"\n  provider:\n    dependency: transitive\n    description:\n      name: provider\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.0.3\"\n  pub_semver:\n    dependency: transitive\n    description:\n      name: pub_semver\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  pubspec_parse:\n    dependency: transitive\n    description:\n      name: pubspec_parse\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.1\"\n  responsive_builder:\n    dependency: \"direct main\"\n    description:\n      name: responsive_builder\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.4.3\"\n  rxdart:\n    dependency: transitive\n    description:\n      name: rxdart\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.27.5\"\n  shared_preferences:\n    dependency: transitive\n    description:\n      name: shared_preferences\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.15\"\n  shared_preferences_android:\n    dependency: transitive\n    description:\n      name: shared_preferences_android\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.12\"\n  shared_preferences_ios:\n    dependency: transitive\n    description:\n      name: shared_preferences_ios\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  shared_preferences_linux:\n    dependency: transitive\n    description:\n      name: shared_preferences_linux\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  shared_preferences_macos:\n    dependency: transitive\n    description:\n      name: shared_preferences_macos\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.4\"\n  shared_preferences_platform_interface:\n    dependency: transitive\n    description:\n      name: shared_preferences_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.0\"\n  shared_preferences_web:\n    dependency: transitive\n    description:\n      name: shared_preferences_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.4\"\n  shared_preferences_windows:\n    dependency: transitive\n    description:\n      name: shared_preferences_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.1\"\n  shelf:\n    dependency: transitive\n    description:\n      name: shelf\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.2\"\n  shelf_web_socket:\n    dependency: transitive\n    description:\n      name: shelf_web_socket\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.2\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.99\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.9.0\"\n  sqflite:\n    dependency: transitive\n    description:\n      name: sqflite\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.3+1\"\n  sqflite_common:\n    dependency: transitive\n    description:\n      name: sqflite_common\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.2.1+1\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.10.0\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  stream_transform:\n    dependency: transitive\n    description:\n      name: stream_transform\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.0\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.1\"\n  synchronized:\n    dependency: transitive\n    description:\n      name: synchronized\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.0+2\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.1\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.4.12\"\n  timing:\n    dependency: transitive\n    description:\n      name: timing\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.0\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.1\"\n  url_launcher:\n    dependency: \"direct main\"\n    description:\n      name: url_launcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.1.6\"\n  url_launcher_android:\n    dependency: transitive\n    description:\n      name: url_launcher_android\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.0.17\"\n  url_launcher_ios:\n    dependency: transitive\n    description:\n      name: url_launcher_ios\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"6.0.17\"\n  url_launcher_linux:\n    dependency: transitive\n    description:\n      name: url_launcher_linux\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1\"\n  url_launcher_macos:\n    dependency: transitive\n    description:\n      name: url_launcher_macos\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1\"\n  url_launcher_platform_interface:\n    dependency: transitive\n    description:\n      name: url_launcher_platform_interface\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0\"\n  url_launcher_web:\n    dependency: transitive\n    description:\n      name: url_launcher_web\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.0.13\"\n  url_launcher_windows:\n    dependency: transitive\n    description:\n      name: url_launcher_windows\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.1\"\n  uuid:\n    dependency: transitive\n    description:\n      name: uuid\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.0.6\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.2\"\n  watcher:\n    dependency: transitive\n    description:\n      name: watcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.1\"\n  web_socket_channel:\n    dependency: transitive\n    description:\n      name: web_socket_channel\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.2.0\"\n  win32:\n    dependency: transitive\n    description:\n      name: win32\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.7.0\"\n  xdg_directories:\n    dependency: transitive\n    description:\n      name: xdg_directories\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.2.0+1\"\n  yaml:\n    dependency: transitive\n    description:\n      name: yaml\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"3.1.1\"\n  youtube_player_iframe:\n    dependency: \"direct main\"\n    description:\n      name: youtube_player_iframe\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.3.0\"\nsdks:\n  dart: \">=2.18.0 <3.0.0\"\n  flutter: \">=3.3.0\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.lock b/pubspec.lock
--- a/pubspec.lock	(revision dd4ebff7b31b3de61eafb2b955c77cd9b1043ff7)
+++ b/pubspec.lock	(date 1665398792564)
@@ -37,7 +37,7 @@
     source: hosted
     version: "3.0.0"
   bloc:
-    dependency: transitive
+    dependency: "direct main"
     description:
       name: bloc
       url: "https://pub.dartlang.org"
@@ -308,6 +308,20 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "10.2.1"
+  freezed:
+    dependency: "direct dev"
+    description:
+      name: freezed
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0+1"
+  freezed_annotation:
+    dependency: "direct main"
+    description:
+      name: freezed_annotation
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0"
   frontend_server_client:
     dependency: transitive
     description:
@@ -315,6 +329,13 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.1.3"
+  get_it:
+    dependency: "direct main"
+    description:
+      name: get_it
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "7.2.0"
   glob:
     dependency: transitive
     description:
@@ -357,6 +378,20 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "4.0.1"
+  injectable:
+    dependency: "direct main"
+    description:
+      name: injectable
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.5.3"
+  injectable_generator:
+    dependency: "direct dev"
+    description:
+      name: injectable_generator
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.5.4"
   intl:
     dependency: transitive
     description:
@@ -399,6 +434,13 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.10.0"
+  logger:
+    dependency: "direct main"
+    description:
+      name: logger
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.1.0"
   logging:
     dependency: transitive
     description:
@@ -691,6 +733,13 @@
     description: flutter
     source: sdk
     version: "0.0.99"
+  source_gen:
+    dependency: transitive
+    description:
+      name: source_gen
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.5"
   source_span:
     dependency: transitive
     description:
Index: .idea/libraries/Flutter_Plugins.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\n  <library name=\"Flutter Plugins\" type=\"FlutterPluginsLibraryType\">\n    <CLASSES>\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences-2.0.15\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_linux-2.1.1\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_android-6.0.17\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_macos-3.0.1\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_android-2.0.12\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/hexcolor-2.0.7\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_ios-6.0.17\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider_windows-2.1.2\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_web-2.0.13\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider_macos-2.0.6\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_windows-2.1.1\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_web-2.0.4\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider_ios-2.0.11\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_linux-3.0.1\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider-2.0.11\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_ios-2.1.1\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider_android-2.0.19\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/permission_handler-10.0.0\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider_linux-2.1.7\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher-6.1.5\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/sqflite-2.0.3+1\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_windows-3.0.1\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_macos-2.0.4\" />\n      <root url=\"file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_inappwebview-5.4.3+7\" />\n    </CLASSES>\n    <JAVADOC />\n    <SOURCES />\n  </library>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Flutter_Plugins.xml b/.idea/libraries/Flutter_Plugins.xml
--- a/.idea/libraries/Flutter_Plugins.xml	(revision dd4ebff7b31b3de61eafb2b955c77cd9b1043ff7)
+++ b/.idea/libraries/Flutter_Plugins.xml	(date 1665386662961)
@@ -18,13 +18,13 @@
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider-2.0.11" />
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_ios-2.1.1" />
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider_android-2.0.19" />
-      <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/permission_handler-10.0.0" />
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/path_provider_linux-2.1.7" />
-      <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher-6.1.5" />
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/sqflite-2.0.3+1" />
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_windows-3.0.1" />
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/shared_preferences_macos-2.0.4" />
       <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_inappwebview-5.4.3+7" />
+      <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/permission_handler-10.1.0" />
+      <root url="file://$USER_HOME$/snap/flutter/common/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher-6.1.6" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
Index: lib/presentation/new_home_page/widgets/new_home_page_widget.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/presentation/new_home_page/widgets/new_home_page_widget.dart b/lib/presentation/new_home_page/widgets/new_home_page_widget.dart
new file mode 100644
--- /dev/null	(date 1665407528310)
+++ b/lib/presentation/new_home_page/widgets/new_home_page_widget.dart	(date 1665407528310)
@@ -0,0 +1,117 @@
+import 'package:cybear_jinni_site/application/new_home_page/new_home_page_bloc.dart';
+import 'package:cybear_jinni_site/presentation/new_home_page/widgets/tab_indicator.dart';
+import 'package:flutter/gestures.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_bloc/flutter_bloc.dart';
+
+class NewHomePageWidget extends StatelessWidget {
+  @override
+  Widget build(BuildContext context) {
+    final Size screenSize = MediaQuery.of(context).size;
+
+    return BlocBuilder<NewHomePageBloc, NewHomePageState>(
+      builder: (context, state) {
+        return state.map(
+          (value) => const Text('sd'),
+          loading: (_) => const Center(
+            child: CircularProgressIndicator(),
+          ),
+          loaded: (loadedState) {
+            final PageController pageController = PageController();
+
+            bool scrollAnimationCompleted = false;
+
+            int currentPage = loadedState.currentPage;
+            const int numberOfPages = 3;
+
+            Future.delayed(const Duration(milliseconds: 100))
+                .then((value) async {
+              pageController.animateToPage(
+                loadedState.currentPage,
+                duration: const Duration(milliseconds: 500),
+                curve: Curves.linearToEaseOut,
+              );
+              currentPage = loadedState.currentPage;
+              await Future.delayed(const Duration(milliseconds: 100));
+              scrollAnimationCompleted = true;
+            });
+
+            return Listener(
+              onPointerSignal: (pointerSignal) {
+                if (pointerSignal is PointerScrollEvent &&
+                    scrollAnimationCompleted) {
+                  final double scrollAmount = pointerSignal.scrollDelta.dy;
+
+                  if (scrollAmount > 0 && currentPage + 1 < numberOfPages) {
+                    currentPage++;
+                  } else if (scrollAmount < 0 && currentPage - 1 > -1) {
+                    currentPage--;
+                  } else {
+                    return;
+                  }
+                  context.read<NewHomePageBloc>().add(
+                        NewHomePageEvent.scrollPage(
+                          pageController.page!,
+                          currentPage,
+                        ),
+                      );
+                }
+              },
+              child: Stack(
+                children: [
+                  PageView(
+                    controller: pageController,
+                    scrollDirection: Axis.vertical,
+                    physics: const NeverScrollableScrollPhysics(),
+                    children: [
+                      ColoredBox(
+                        color: Colors.amber,
+                        child: Center(
+                          child: ListView(
+                            children: [
+                              TextButton(
+                                onPressed: () {
+                                  context.read<NewHomePageBloc>().add(
+                                        NewHomePageEvent.scrollPage(
+                                          loadedState.scrollPosition,
+                                          currentPage++,
+                                        ),
+                                      );
+                                },
+                                child: const Text('Next Page'),
+                              ),
+                              const Text('First Page'),
+                            ],
+                          ),
+                        ),
+                      ),
+                      const ColoredBox(
+                        color: Colors.blue,
+                        child: Center(
+                          child: Text('Second Page'),
+                        ),
+                      ),
+                      const ColoredBox(
+                        color: Colors.red,
+                        child: Center(
+                          child: Text('Third Page'),
+                        ),
+                      ),
+                    ],
+                  ),
+                  Align(
+                    alignment: Alignment.centerRight,
+                    child: TabIndicator(numberOfPages, currentPage),
+                  ),
+                ],
+              ),
+            );
+          },
+          error: (_) {
+            return const Text('Error');
+          },
+        );
+      },
+    );
+  }
+}
Index: lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:cybear_jinni_site/core/my_singleton.dart';\nimport 'package:cybear_jinni_site/core/route_names.dart';\nimport 'package:cybear_jinni_site/features/application/usecases/home_page/landing_page.dart';\nimport 'package:cybear_jinni_site/features/application/usecases/home_page/pages/about_page/about_page.dart';\nimport 'package:cybear_jinni_site/features/application/usecases/home_page/pages/faq_page/faq_page.dart';\nimport 'package:cybear_jinni_site/features/application/usecases/home_page/pages/home_page/home_page.dart';\nimport 'package:cybear_jinni_site/features/application/usecases/home_page/pages/integrations_page/integrations_page.dart';\nimport 'package:cybear_jinni_site/features/application/usecases/home_page/pages/set_up_page/set_up_page.dart';\nimport 'package:easy_localization/easy_localization.dart';\nimport 'package:flutter/material.dart';\n\nvoid main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  await EasyLocalization.ensureInitialized();\n\n  runApp(\n    /// Use https://lingohub.com/developers/supported-locales/language-designators-with-regions\n    /// Or https://www.contentstack.com/docs/developers/multilingual-content/list-of-supported-languages/\n    /// To find your language letters, and add the file letters below\n    EasyLocalization(\n      supportedLocales: const <Locale>[\n        Locale('en', 'US'),\n      ],\n      path: 'assets/translations', // <-- change patch to your\n      fallbackLocale: const Locale('en', 'US'),\n      child: MyApp(),\n    ),\n  );\n}\n\nclass MyApp extends StatelessWidget {\n  final ThemeData theme = ThemeData(\n    primarySwatch: Colors.deepPurple,\n    textTheme: const TextTheme(\n      bodyText1: TextStyle(color: Colors.white),\n      bodyText2: TextStyle(color: Colors.white70),\n    ),\n    // fontFamily: 'gidole_regular',\n  );\n\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      // title: 'Flutter Demo',\n      // theme: ThemeData(\n      //   // This is the theme of your application.\n      //   //\n      //   // Try running your application with \"flutter run\". You'll see the\n      //   // application has a blue toolbar. Then, without quitting the app, try\n      //   // changing the primarySwatch below to Colors.green and then invoke\n      //   // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\n      //   // or simply save your changes to \"hot reload\" in a Flutter IDE).\n      //   // Notice that the counter didn't reset back to zero; the application\n      //   // is not restarted.\n      //   primarySwatch: Colors.blue,\n      //   // This makes the visual density adapt to the platform that you run\n      //   // the app on. For desktop platforms, the controls will be smaller and\n      //   // closer together (more dense) than on mobile platforms.\n      //   visualDensity: VisualDensity.adaptivePlatformDensity,\n      // ),\n      // home: MyHomePage(title: 'Flutter Demo Home Page'),\n\n      title: 'CyBear Jinni Smart Home',\n      localizationsDelegates: context.localizationDelegates,\n      supportedLocales: context.supportedLocales,\n      locale: context.locale,\n      //      darkTheme: ThemeData(brightness: Brightness.dark),\n      debugShowCheckedModeBanner: false,\n      theme: theme.copyWith(\n        colorScheme: theme.colorScheme.copyWith(\n          secondary: Colors.indigo,\n        ),\n      ),\n\n      routes: <String, WidgetBuilder>{\n        '/': (BuildContext context) {\n          MySingleton.setCurrentPageName('landingPage');\n          return LandingPage();\n        },\n        '/home': (BuildContext context) {\n          MySingleton.setCurrentPageName(homeRoute);\n          return LandingPage();\n        },\n        //        '/home_settings': (BuildContext context) => SettingsPage(),\n      },\n      onGenerateRoute: (RouteSettings settings) {\n        final List<String> pathElements = settings.name!.split('/');\n        if (pathElements[0] == homeRoute) {\n          MySingleton.setCurrentPageName(homeRoute);\n          return MaterialPageRoute(\n            builder: (BuildContext context) => HomePage(),\n          );\n        } else if (pathElements[0] == aboutRoute) {\n          MySingleton.setCurrentPageName(aboutRoute);\n          return MaterialPageRoute(\n            builder: (BuildContext context) => AboutPage(),\n          );\n        } else if (pathElements[0] == faqRoute) {\n          MySingleton.setCurrentPageName(faqRoute);\n          return MaterialPageRoute(\n            builder: (BuildContext context) => FaqPage(),\n          );\n        } else if (pathElements[0] == integrationsRoute) {\n          MySingleton.setCurrentPageName(integrationsRoute);\n          return MaterialPageRoute(\n            builder: (BuildContext context) => IntegrationsPage(),\n          );\n        } else if (pathElements[0] == setUpRoute) {\n          MySingleton.setCurrentPageName(setUpRoute);\n          return MaterialPageRoute(\n            builder: (BuildContext context) => SetUpPage(),\n          );\n        } else {\n          MySingleton.setCurrentPageName(homeRoute);\n          MaterialPageRoute(builder: (BuildContext context) => HomePage());\n        }\n        return null;\n      },\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/main.dart b/lib/main.dart
--- a/lib/main.dart	(revision dd4ebff7b31b3de61eafb2b955c77cd9b1043ff7)
+++ b/lib/main.dart	(date 1665409548796)
@@ -6,10 +6,12 @@
 import 'package:cybear_jinni_site/features/application/usecases/home_page/pages/home_page/home_page.dart';
 import 'package:cybear_jinni_site/features/application/usecases/home_page/pages/integrations_page/integrations_page.dart';
 import 'package:cybear_jinni_site/features/application/usecases/home_page/pages/set_up_page/set_up_page.dart';
+import 'package:cybear_jinni_site/injection.dart';
 import 'package:easy_localization/easy_localization.dart';
 import 'package:flutter/material.dart';
 
 void main() async {
+  configureDependencies(Env.prod);
   WidgetsFlutterBinding.ensureInitialized();
   await EasyLocalization.ensureInitialized();
 
Index: lib/injection.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/injection.dart b/lib/injection.dart
new file mode 100644
--- /dev/null	(date 1665398882088)
+++ b/lib/injection.dart	(date 1665398882088)
@@ -0,0 +1,25 @@
+import 'package:cybear_jinni_site/injection.config.dart';
+import 'package:cybear_jinni_site/utils.dart';
+import 'package:get_it/get_it.dart';
+import 'package:injectable/injectable.dart';
+
+final getIt = GetIt.instance;
+
+/// Saves the current environment for manual use
+late String currentEnv;
+
+@injectableInit
+void configureDependencies(String env) {
+  currentEnv = env;
+  logger.i('Current CyBear Jinni Site environment name: $currentEnv');
+  $initGetIt(getIt, environment: env);
+}
+
+abstract class Env {
+  static const String test = 'test';
+  static const String dev = 'dev';
+  static const String prod = 'prod';
+
+  /// Demo of the app with fake data
+  static const String demo = 'demo';
+}
Index: lib/presentation/new_home_page/new_home_page_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/presentation/new_home_page/new_home_page_page.dart b/lib/presentation/new_home_page/new_home_page_page.dart
new file mode 100644
--- /dev/null	(date 1665398960816)
+++ b/lib/presentation/new_home_page/new_home_page_page.dart	(date 1665398960816)
@@ -0,0 +1,50 @@
+import 'package:cybear_jinni_site/application/new_home_page/new_home_page_bloc.dart';
+import 'package:cybear_jinni_site/injection.dart';
+import 'package:cybear_jinni_site/presentation/new_home_page/widgets/new_home_page_widget.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:flutter_bloc/flutter_bloc.dart';
+import 'package:hexcolor/hexcolor.dart';
+
+class NewHomePagePage extends StatelessWidget {
+  void backButtonFunction(BuildContext context) {
+    Navigator.pop(context);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        toolbarHeight: 0,
+        backgroundColor: Colors.black,
+        systemOverlayStyle: SystemUiOverlayStyle.light,
+      ),
+      body: Container(
+        color: HexColor('#FBF5F9'),
+        child: Column(
+          children: [
+            Container(
+              margin: const EdgeInsets.symmetric(horizontal: 10, vertical: 40),
+              alignment: Alignment.centerLeft,
+              child: Text(
+                'Vendors:',
+                style: TextStyle(color: HexColor('#6599CA'), fontSize: 20),
+              ),
+            ),
+            Expanded(
+              child: BlocProvider(
+                create: (context) => getIt<NewHomePageBloc>()
+                  ..add(const NewHomePageEvent.initialized()),
+                child: NewHomePageWidget(),
+              ),
+            ),
+            const SizedBox(
+              height: 50,
+              child: Text(''),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
Index: lib/application/new_home_page/new_home_page_bloc.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/application/new_home_page/new_home_page_bloc.dart b/lib/application/new_home_page/new_home_page_bloc.dart
new file mode 100644
--- /dev/null	(date 1665403422285)
+++ b/lib/application/new_home_page/new_home_page_bloc.dart	(date 1665403422285)
@@ -0,0 +1,38 @@
+import 'dart:async';
+
+import 'package:bloc/bloc.dart';
+import 'package:freezed_annotation/freezed_annotation.dart';
+import 'package:injectable/injectable.dart';
+
+part 'new_home_page_bloc.freezed.dart';
+part 'new_home_page_event.dart';
+part 'new_home_page_state.dart';
+
+@injectable
+class NewHomePageBloc extends Bloc<NewHomePageEvent, NewHomePageState> {
+  NewHomePageBloc() : super(NewHomePageState.initialized()) {
+    on<Initialized>(_initialized);
+    on<ScrollPage>(_scrollPage);
+  }
+
+  Future<void> _initialized(
+    Initialized event,
+    Emitter<NewHomePageState> emit,
+  ) async {
+    // final newHomePageList = await _vendorRepository.getNewHomePage();
+    emit(const NewHomePageState.loaded(0, 0));
+  }
+
+  Future<void> _scrollPage(
+    ScrollPage event,
+    Emitter<NewHomePageState> emit,
+  ) async {
+    // pageController.animateToPage(
+    //   currentPage,
+    //   duration: const Duration(seconds: 3),
+    //   curve: Curves.easeIn,
+    // );
+
+    emit(NewHomePageState.loaded(event.scrollPosition, event.currentPage));
+  }
+}
Index: lib/utils.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/utils.dart b/lib/utils.dart
new file mode 100644
--- /dev/null	(date 1636641684936)
+++ b/lib/utils.dart	(date 1636641684936)
@@ -0,0 +1,7 @@
+import 'package:logger/logger.dart';
+
+/// Instance of logger for all the app
+final logger = Logger(
+  filter: ProductionFilter(),
+  printer: PrettyPrinter(methodCount: 0, printTime: true),
+);
Index: lib/application/new_home_page/new_home_page_state.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/application/new_home_page/new_home_page_state.dart b/lib/application/new_home_page/new_home_page_state.dart
new file mode 100644
--- /dev/null	(date 1665403338745)
+++ b/lib/application/new_home_page/new_home_page_state.dart	(date 1665403338745)
@@ -0,0 +1,20 @@
+part of 'new_home_page_bloc.dart';
+
+@freezed
+class NewHomePageState with _$NewHomePageState {
+  const factory NewHomePageState() = _NewHomePageState;
+
+  factory NewHomePageState.initialized() => const NewHomePageState();
+
+  const factory NewHomePageState.loading(
+    double scrollPosition,
+    int currentPage,
+  ) = Loading;
+
+  const factory NewHomePageState.loaded(
+    double scrollPosition,
+    int currentPage,
+  ) = Loaded;
+
+  const factory NewHomePageState.error() = Error;
+}
Index: lib/application/new_home_page/new_home_page_event.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/application/new_home_page/new_home_page_event.dart b/lib/application/new_home_page/new_home_page_event.dart
new file mode 100644
--- /dev/null	(date 1665403294329)
+++ b/lib/application/new_home_page/new_home_page_event.dart	(date 1665403294329)
@@ -0,0 +1,11 @@
+part of 'new_home_page_bloc.dart';
+
+@freezed
+class NewHomePageEvent with _$NewHomePageEvent {
+  const factory NewHomePageEvent.initialized() = Initialized;
+
+  const factory NewHomePageEvent.scrollPage(
+    double scrollPosition,
+    int currentPage,
+  ) = ScrollPage;
+}
